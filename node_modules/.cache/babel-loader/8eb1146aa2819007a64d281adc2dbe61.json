{"ast":null,"code":"import _ from \"lodash\";\n/**\n * this function is used to paginate the data flow propperly to a given umber of items\n * @param {Array of items} items\n * @param {navigate to a given page number} pageNumber\n * @param {how many items you want to render in a page} pageSize\n */\n\nexport function paginate(items, pageNumber, pageSize) {\n  //calculate the starting index of the items on pageNumber\n  const startIndex = (pageNumber - 1) * pageSize; // use lodash to go the startIndex to take all the items for the current page\n  // 1. you need to convert to lodash object in order to use it correctly, like this:=> _(items)\n  // _(items).value() : reconvert lodash object to a normal js object\n\n  return _(items).slice(startIndex).take(pageSize).value(); // take(pageSize) only take elements from slice and add them as pageSize limits\n}","map":{"version":3,"sources":["/Users/motri/react_project/vidly/src/utils/paginate.js"],"names":["_","paginate","items","pageNumber","pageSize","startIndex","slice","take","value"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AACA;;;;;;;AAMA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,UAAzB,EAAqCC,QAArC,EAA+C;AACrD;AACA,QAAMC,UAAU,GAAG,CAACF,UAAU,GAAG,CAAd,IAAmBC,QAAtC,CAFqD,CAGrD;AACA;AACA;;AACA,SAAOJ,CAAC,CAACE,KAAD,CAAD,CAASI,KAAT,CAAeD,UAAf,EAA2BE,IAA3B,CAAgCH,QAAhC,EAA0CI,KAA1C,EAAP,CANqD,CAOrD;AACA","sourcesContent":["import _ from \"lodash\";\n/**\n * this function is used to paginate the data flow propperly to a given umber of items\n * @param {Array of items} items\n * @param {navigate to a given page number} pageNumber\n * @param {how many items you want to render in a page} pageSize\n */\nexport function paginate(items, pageNumber, pageSize) {\n\t//calculate the starting index of the items on pageNumber\n\tconst startIndex = (pageNumber - 1) * pageSize;\n\t// use lodash to go the startIndex to take all the items for the current page\n\t// 1. you need to convert to lodash object in order to use it correctly, like this:=> _(items)\n\t// _(items).value() : reconvert lodash object to a normal js object\n\treturn _(items).slice(startIndex).take(pageSize).value();\n\t// take(pageSize) only take elements from slice and add them as pageSize limits\n}\n"]},"metadata":{},"sourceType":"module"}